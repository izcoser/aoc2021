

# This file was *autogenerated* from the file 12.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1)
import sys

paths = []

def explore(G, parent, node, path, visits):
    #print(f'exploring {node}, path={path}, parent={parent}')
    
    if node not in visits:
        visits[node] = _sage_const_1 
    else:
        visits[node] += _sage_const_1 
    
    if node == 'end':
        paths.append(path)
        return
    
    for n in [x for x in G.neighbors(node) if x != 'start']:
        if n not in visits or not (visits[n] == _sage_const_1  and n.islower()):
            v = visits.copy()
            explore(G, node, n, path + ',' + n, v)

G = Graph()
for line in sys.stdin:
    line = line.strip()
    v1, v2 = line.split('-')
    G.add_edge((v1, v2), label=line)

visits = {}
explore(G, '', 'start', 'start', visits)
print(len(paths))

